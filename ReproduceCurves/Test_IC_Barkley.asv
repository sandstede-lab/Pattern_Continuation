% test model

clear all;
close all;

path(path,'..');

feature_handle = @feature_evaluation;
obj_handle = @objective_evaluation;

modelpar = struct;

modelpar.model = 'Barkley';
modelpar.xdim = 2;
modelpar.threshold = 0.7;


featpar = struct;
featpar.feature = 'retract';
modelpar.sets = 'pos';
featpar.N = 1;
featpar.alpha = 1;

reproduce = 'retract';

contpar = struct;
contpar.step_size = 0.01;
contpar.max_step_arc_length = 0.01;
contpar.min_step_arc_length = contpar.max_step_arc_length/2;
contpar.L = .5;
contpar.max_sim = 1;

switch reproduce
    case 'retract'
        % Find retract
        featpar.feature = 'retract';
        start.point = [0.375,0.015];
        start.normal = [0.01,0.01];
        % contpar.step_size = 0.02;
        % contpar.max_step_arc_length = 0.02;
        % contpar.min_step_arc_length = 0.02;
        modelpar.sets = 'pos';
    case 'meander1'
        start.point = [0.66,0.01];%+0.02;
        start.normal = [0.01,0.01];
        featpar.feature = 'meander';
        modelpar.sets = 'tipping_points';
    case 'meander2'
        start.point = [0.66,0.01];%+0.02;
        start.normal = [0.01,0.01];
        featpar.feature = 'meander';
        modelpar.sets = 'tipping_points';

    case 'drift'
        start.point = [0.45,0.005];
        start.normal = [0.01,0.01];
        contpar.max_step_arc_length = 0.005*1.5;
        contpar.min_step_arc_length = 0.005*1.5;
        contpar.step_size = 0.005*1.5;
        featpar.feature = 'drift';
        modelpar.sets = 'tipping_points';




end

line1 = struct; line1.start = [0.2,0.01]; line1.end = [0.7,0.01];
line2 = struct; line2.start = [0.2,0.02]; line2.end = [0.7,0.02];
num_search = 15;
cd ..
[search_1, dists_c1,dists_c2] = find_initial_condition(line2, contpar.step_size, num_search, modelpar, featpar,feature_handle, obj_handle);
cd ReproduceCurves


idx = find(dists_c1 == max(dists_c1));
if length(idx)>1
    idx = idx(1);
end
start.point = ( search_1(:,idx)' + search_1(:,idx+1)' )/2 ;

angles = linspace(0,pi,num_search+1);
angles = angles(1:end-1);
idx = find(dists_c2 == max(dists_c2)); idx = idx( round(length(idx)/2));
start.normal = [cos(angles(idx)), sin(angles(idx))];
% start.point = ( search_1(:,idx)' + search_1(:,idx+1)' )/2 ;







feature_handle = @feature_evaluation;
obj_handle = @objective_evaluation;

cd ..
[p_history,counts,L_history,p_history_all,metric_history_all] = continuation(contpar, featpar, modelpar, feature_handle, obj_handle, start )
cd ReproduceCurves